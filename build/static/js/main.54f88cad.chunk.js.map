{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","onFilterChange","value","onChange","PersonForm","addName","newName","handleInputChange","newNumber","handleNumberChange","onSubmit","type","Person","personArr","deletePerson","map","p","className","name","number","onClick","id","baseUrl","exportedObject","getAll","axios","get","create","newObject","post","then","res","data","update","put","delete","Notification","message","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","e","target","event","preventDefault","newInput","length","existingPerson","find","toLowerCase","window","confirm","changedPerson","n","setTimeout","catch","console","log","response","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54f88cad.chunk.js","sourcesContent":["import React from 'react';\r\nconst Filter = ({ filter, onFilterChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tFilter shown with <input value={filter} onChange={onFilterChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nconst PersonForm = ({\r\n\taddName,\r\n\tnewName,\r\n\thandleInputChange,\r\n\tnewNumber,\r\n\thandleNumberChange,\r\n}) => {\r\n\treturn (\r\n\t\t<form onSubmit={addName}>\r\n\t\t\t<div>\r\n\t\t\t\tname:\r\n\t\t\t\t<input type='text' value={newName} onChange={handleInputChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber:\r\n\t\t\t\t<input type='text' value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type='submit'>add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Person = ({ personArr, deletePerson }) => {\r\n\treturn personArr.map((p) => (\r\n\t\t<div>\r\n\t\t\t<li key={p.id} className='note'>\r\n\t\t\t\t{p.name} {p.number}\r\n\t\t\t\t<button onClick={() => deletePerson(p.id)}> Delete</button>\r\n\t\t\t</li>\r\n\t\t</div>\r\n\t));\r\n};\r\n\r\nexport default Person;\r\n","import axios from 'axios';\r\nconst baseUrl = '/persons';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request;\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((res) => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`);\r\n\treturn request;\r\n};\r\n\r\nconst exportedObject = {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n\tdeletePerson,\r\n};\r\nexport default exportedObject;\r\n","const Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <div className='error'>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","// import React, { useState, useEffect } from 'react';\r\n// import Note from './components/Note';\r\n// import noteService from './services/notes';\r\n\r\n// const App = () => {\r\n// \tconst [notes, setNotes] = useState([]);\r\n// \tconst [newNote, setNewNote] = useState('');\r\n// \tconst [showAll, setShowAll] = useState(true);\r\n\r\n// \tuseEffect(() => {\r\n// \t\tnoteService.getAll().then((res) => {\r\n// \t\t\tsetNotes(res.data);\r\n// \t\t});\r\n// \t}, []);\r\n\r\n// \tconsole.log('render', notes.length, 'notes');\r\n\r\n// \tconst toggleImportanceOf = (id) => {\r\n// \t\tconst note = notes.find((n) => n.id === id);\r\n// \t\tconst changedNote = { ...note, important: !note.important };\r\n// \t\tnoteService\r\n// \t\t\t.update(id, changedNote)\r\n// \t\t\t.then((res) => {\r\n// \t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : res.data)));\r\n// \t\t\t})\r\n// \t\t\t.catch((e) => {\r\n// \t\t\t\tconsole.log(e);\r\n// \t\t\t\talert(`the note ${note.content} was already deleted`);\r\n// \t\t\t\tsetNotes(notes.filter((n) => n.id !== id));\r\n// \t\t\t});\r\n// \t};\r\n\r\n// \tconst deleteNote = (id) => {\r\n// \t\tnoteService.deleteNote(id).then(setNotes(notes.filter((n) => n.id !== id)));\r\n// \t};\r\n\r\n// \tconst addNote = (event) => {\r\n// \t\tevent.preventDefault();\r\n// \t\tconst noteObject = {\r\n// \t\t\tid: notes.length + 1,\r\n// \t\t\tcontent: newNote,\r\n// \t\t\tdate: new Date().toISOString(),\r\n// \t\t\timportant: Math.random() > 0.5,\r\n// \t\t};\r\n\r\n// \t\tnoteService.create(noteObject).then((response) => {\r\n// \t\t\tsetNotes([...notes, response.data]);\r\n// \t\t\tsetNewNote('');\r\n// \t\t});\r\n\r\n// \t};\r\n\r\n// \tconst handleNoteChange = (event) => {\r\n// \t\tsetNewNote(event.target.value);\r\n// \t};\r\n\r\n// \tconst notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<h1>Notes</h1>\r\n// \t\t\t<div>\r\n// \t\t\t\t<button onClick={() => setShowAll(!showAll)}>\r\n// \t\t\t\t\tshow {showAll ? 'important' : 'all'}\r\n// \t\t\t\t</button>\r\n// \t\t\t</div>\r\n// \t\t\t<ul>\r\n// \t\t\t\t{notesToShow.map((note) => (\r\n// \t\t\t\t\t<Note\r\n// \t\t\t\t\t\tkey={note.id}\r\n// \t\t\t\t\t\tnote={note}\r\n// \t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\r\n// \t\t\t\t\t\tdeleteNote={() => deleteNote(note.id)}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t))}\r\n// \t\t\t</ul>\r\n// \t\t\t<form onSubmit={addNote}>\r\n// \t\t\t\t<input value={newNote} onChange={handleNoteChange} />\r\n// \t\t\t\t<button type='submit'>save</button>\r\n// \t\t\t</form>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// export default App;\r\nimport React, { useState, useEffect } from 'react';\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Person from './components/Person';\r\nimport FilterResult from './components/FilterResult';\r\nimport personService from '../src/services/person';\r\nimport Notification from './components/Notification';\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([]);\r\n\tconst [newName, setNewName] = useState('');\r\n\tconst [newNumber, setNewNumber] = useState('');\r\n\tconst [filter, setFilter] = useState('');\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tpersonService.getAll().then((res) => {\r\n\t\t\tsetPersons(res.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst addName = (event) => {\r\n\t\tevent.preventDefault(); //prevent the default action by submit button\r\n\t\tif (!newName || !newNumber) {\r\n\t\t\talert('Please fill in the fields');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst newInput = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber,\r\n\t\t\tid: persons.length + 1,\r\n\t\t};\r\n\t\tconst existingPerson = persons.find(\r\n\t\t\t(p) => p.name.toLowerCase() === newName.toLowerCase()\r\n\t\t);\r\n\r\n\t\tif (existingPerson && existingPerson.number !== newNumber) {\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t`${existingPerson.name} is already added to phone book, replace the old number with a new one?`\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tconst changedPerson = { ...existingPerson, number: newNumber };\r\n\t\t\t\tconst id = existingPerson.id;\r\n\r\n\t\t\t\tpersonService\r\n\t\t\t\t\t.update(id, changedPerson)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tsetPersons(persons.map((n) => (n.id !== id ? n : res)));\r\n\t\t\t\t\t\tsetMessage('Number updated');\r\n\t\t\t\t\t\tsetNewName('');\r\n\t\t\t\t\t\tsetNewNumber('');\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetMessage(null);\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\tsetMessage('Something wrong happened while updating. Try again.');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetMessage(null);\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (existingPerson) {\r\n\t\t\tsetMessage(`${newName} is already added to phone book.`); // avoid adding duplicate item\r\n\t\t\tsetNewName('');\r\n\t\t\tsetNewNumber('');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetMessage(null);\r\n\t\t\t}, 3000);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tpersonService.create(newInput).then((response) => {\r\n\t\t\t\tsetPersons(persons.concat(response));\r\n\t\t\t\tsetMessage(`${response.name} was added to the contact.`);\r\n\r\n\t\t\t\tsetNewName('');\r\n\t\t\t\tsetNewNumber('');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetMessage(null);\r\n\t\t\t\t}, 3000);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetNewName(e.target.value);\r\n\t};\r\n\tconst handleNumberChange = (e) => {\r\n\t\tsetNewNumber(e.target.value);\r\n\t};\r\n\r\n\tconst handleFilterChange = (e) => {\r\n\t\tsetFilter(e.target.value);\r\n\t};\r\n\r\n\tconst handleDelete = (id) => {\r\n\t\tif (window.confirm('You sure you wanna delete it?')) {\r\n\t\t\tpersonService\r\n\t\t\t\t.deletePerson(id)\r\n\t\t\t\t.then(setPersons(persons.filter((n) => n.id !== id)))\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\tsetMessage('No such person found.');\r\n\t\t\t\t});\r\n\t\t\tsetMessage('Contact Deleted');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetMessage(null);\r\n\t\t\t}, 3000);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Phone book</h2>\r\n\t\t\t<Notification message={message} />\r\n\r\n\t\t\t<Filter filter={filter} onFilterChange={handleFilterChange} />\r\n\t\t\t<PersonForm\r\n\t\t\t\taddName={addName}\r\n\t\t\t\tnewName={newName}\r\n\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\tnewNumber={newNumber}\r\n\t\t\t\thandleNumberChange={handleNumberChange}\r\n\t\t\t/>\r\n\t\t\t<h2>Name and Phone Number</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<Person personArr={persons} deletePerson={handleDelete} />\r\n\t\t\t</ul>\r\n\r\n\t\t\t{/* <h3>Filtered results</h3>\r\n\t\t\t<ul>\r\n\t\t\t\t<FilterResult FilterArr={persons} filter={filter} />\r\n\t\t\t</ul> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import App from './App';\r\n\r\n// const courses = [\r\n// \t{\r\n// \t\tname: 'Half Stack application development',\r\n// \t\tid: 1,\r\n// \t\tparts: [\r\n// \t\t\t{\r\n// \t\t\t\tname: 'Fundamentals of React',\r\n// \t\t\t\texercises: 10,\r\n// \t\t\t\tid: 1,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tname: 'Using props to pass data',\r\n// \t\t\t\texercises: 7,\r\n// \t\t\t\tid: 2,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tname: 'State of a component',\r\n// \t\t\t\texercises: 14,\r\n// \t\t\t\tid: 3,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tname: 'Redux',\r\n// \t\t\t\texercises: 11,\r\n// \t\t\t\tid: 4,\r\n// \t\t\t},\r\n// \t\t],\r\n// \t},\r\n// \t{\r\n// \t\tname: 'Node.js',\r\n// \t\tid: 2,\r\n// \t\tparts: [\r\n// \t\t\t{\r\n// \t\t\t\tname: 'Routing',\r\n// \t\t\t\texercises: 3,\r\n// \t\t\t\tid: 1,\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tname: 'Middlewares',\r\n// \t\t\t\texercises: 7,\r\n// \t\t\t\tid: 2,\r\n// \t\t\t},\r\n// \t\t],\r\n// \t},\r\n// ];\r\n\r\n// ReactDOM.render(<App courses={courses} />, document.getElementById('root'));\r\n\r\n// import { StrictMode } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\n// import App from './App';\r\n// const notes = [\r\n// \t{\r\n// \t\tid: 1,\r\n// \t\tcontent: 'HTML is easy',\r\n// \t\tdate: '2019-05-30T17:30:31.098Z',\r\n// \t\timportant: true,\r\n// \t},\r\n// \t{\r\n// \t\tid: 2,\r\n// \t\tcontent: 'Browser can execute only JavaScript',\r\n// \t\tdate: '2019-05-30T18:39:34.091Z',\r\n// \t\timportant: false,\r\n// \t},\r\n// \t{\r\n// \t\tid: 3,\r\n// \t\tcontent: 'GET and POST are the most important methods of HTTP protocol',\r\n// \t\tdate: '2019-05-30T19:20:14.298Z',\r\n// \t\timportant: true,\r\n// \t},\r\n// ];\r\n\r\n// const rootElement = document.getElementById('root');\r\n// ReactDOM.render(\r\n// \t<StrictMode>\r\n// \t\t<App notes={notes} />\r\n// \t</StrictMode>,\r\n// \trootElement\r\n// );\r\n\r\n// import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\naxios.get('http://localhost:3001/persons').then((res) => {\r\n\tReactDOM.render(<App />, document.getElementById('root'));\r\n});\r\n\r\n// const rootElement = document.getElementById('root');\r\n// ReactDOM.render(\r\n// \t<StrictMode>\r\n// \t\t<App />\r\n// \t</StrictMode>,\r\n// \trootElement\r\n// );\r\n"],"sourceRoot":""}